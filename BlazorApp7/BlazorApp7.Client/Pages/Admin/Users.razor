@page "/admin/users"
@using BlazorApp7.Domain.Entities
@* @rendermode @(new InteractiveAutoRenderMode(false)) *@
@rendermode InteractiveAuto
@inject HttpClient Http

<PageTitle>Users</PageTitle>

<Breadcrumbs HomeLabel="Home" HomeHref="/admin">
    <Breadcrumb>
        <Heading4 class="text-gray-600">Users</Heading4>
    </Breadcrumb>
</Breadcrumbs>

<div class="mx-auto mb-20 mt-8 max-w-screen-lg">
    <Heading1>User Management</Heading1>
    <p class="my-4">This page allows administrators to manage user accounts.</p>
    @if (loading)
    {
        <TableRow>
            <TableCell class="px-6 py-4" colspan="4">
                <Loading />
            </TableCell>
        </TableRow>
    }
    else if (!string.IsNullOrWhiteSpace(message))
    {
        <Alert Type="AlertType.Error">@message</Alert>
    }
    else
    {
        <div class="my-4">
            <Button OnClick="AddUser">Add New User</Button>
        </div>

        <table class="table-auto">
            <TableHeader>
                <TableRow>
                    <TableHead scope="col" class="px-6 py-3">Username</TableHead>
                    <TableHead scope="col" class="px-6 py-3">Email</TableHead>
                    <TableHead scope="col" class="px-6 py-3">Role</TableHead>
                    <TableHead scope="col" class="px-6 py-3"></TableHead>
                </TableRow>
            </TableHeader>
            <TableBody>
                    @foreach (var user in users)
                    {
                        <TableRow>
                            <TableCell class="px-6 py-4">@user.UserName</TableCell>
                            <TableCell class="px-6 py-4">@user.Email</TableCell>
                            <TableCell class="px-6 py-4">@user.PhoneNumber</TableCell>
                            <TableCell class="px-6 py-4">
                                <Button OnClick="@(() => EditUser(user))">Edit</Button>
                                <Button OnClick="@(() => DeleteUser(user))">Delete</Button>
                            </TableCell>
                        </TableRow>
                    }
            </TableBody>
        </table>
    }
</div>

@code {
    private bool loading = true;
    private List<ApplicationUser>? users;
    private string? message;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            users = await Http.GetFromJsonAsync<List<ApplicationUser>>("api/users") ?? new List<ApplicationUser>(); 
        }
        catch (Exception ex)
        {
            message = ex.Message;
            Console.WriteLine(ex.Message);
        }
        finally
        {
            loading = false;
        }
    }

    private void AddUser()
    {
        // Logic to add a new user
    }

    private void EditUser(ApplicationUser user)
    {
        // Logic to edit an existing user
    }

    private void DeleteUser(ApplicationUser user)
    {
        // Logic to delete an existing user
    }
}
