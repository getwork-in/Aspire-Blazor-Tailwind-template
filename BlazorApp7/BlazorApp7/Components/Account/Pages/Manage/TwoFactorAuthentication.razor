@page "/Account/Manage/TwoFactorAuthentication"

@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Identity
@using BlazorApp7.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Two-factor authentication (2FA)</PageTitle>

<StatusMessage />
<h3 class="mb-6 text-2xl font-bold">Two-Factor Authentication (2FA)</h3>

@if (canTrack)
{
    @if (is2faEnabled)
    {
        <!-- Recovery Codes Section -->
        @if (recoveryCodesLeft == 0)
        {
            <div class="mb-4 rounded border border-red-400 bg-red-100 p-4 text-red-700">
                <strong>You have no recovery codes left.</strong>
                <p>You must <a href="Account/Manage/GenerateRecoveryCodes" class="text-blue-600 hover:underline">generate a new set of recovery codes</a> before you can log in with a recovery code.</p>
            </div>
        }
        else if (recoveryCodesLeft == 1)
        {
            <div class="mb-4 rounded border border-red-400 bg-red-100 p-4 text-red-700">
                <strong>You have 1 recovery code left.</strong>
                <p>You can <a href="Account/Manage/GenerateRecoveryCodes" class="text-blue-600 hover:underline">generate a new set of recovery codes</a>.</p>
            </div>
        }
        else if (recoveryCodesLeft <= 3)
        {
            <div class="mb-4 rounded border border-yellow-400 bg-yellow-100 p-4 text-yellow-700">
                <strong>You have @recoveryCodesLeft recovery codes left.</strong>
                <p>You should <a href="Account/Manage/GenerateRecoveryCodes" class="text-blue-600 hover:underline">generate a new set of recovery codes</a>.</p>
            </div>
        }

        <!-- Forget Browser Button -->
        @if (isMachineRemembered)
        {
            <form @formname="forget-browser" @onsubmit="OnSubmitForgetBrowserAsync" method="post" class="inline-block">
                <AntiforgeryToken />
                <button type="submit" class="mr-2 rounded-md bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
                    Forget this browser
                </button>
            </form>
        }

        <!-- 2FA Management Buttons -->
        <a href="Account/Manage/Disable2fa" class="mr-2 rounded-md bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
            Disable 2FA
        </a>
        <a href="Account/Manage/GenerateRecoveryCodes" class="rounded-md bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
            Reset recovery codes
        </a>

        <!-- Authenticator App Section -->
        <h4 class="mt-8 text-xl font-semibold">Authenticator App</h4>
        @if (!hasAuthenticator)
        {
            <a href="Account/Manage/EnableAuthenticator" class="mt-4 inline-block rounded-md bg-green-600 px-4 py-2 text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2">
                Add authenticator app
            </a>
        }
        else
        {
            <a href="Account/Manage/EnableAuthenticator" class="mr-2 mt-4 inline-block rounded-md bg-green-600 px-4 py-2 text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2">
                Set up authenticator app
            </a>
            <a href="Account/Manage/ResetAuthenticator" class="mt-4 inline-block rounded-md bg-red-600 px-4 py-2 text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2">
                Reset authenticator app
            </a>
        }
    }
}
else
{
    <div class="mb-4 rounded border border-red-400 bg-red-100 p-4 text-red-700">
        <strong>Privacy and cookie policy have not been accepted.</strong>
        <p>You must accept the policy before you can enable two-factor authentication.</p>
    </div>
}

@code {
    private bool canTrack;
    private bool hasAuthenticator;
    private int recoveryCodesLeft;
    private bool is2faEnabled;
    private bool isMachineRemembered;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        canTrack = HttpContext.Features.Get<ITrackingConsentFeature>()?.CanTrack ?? true;
        hasAuthenticator = await UserManager.GetAuthenticatorKeyAsync(user) is not null;
        is2faEnabled = await UserManager.GetTwoFactorEnabledAsync(user);
        isMachineRemembered = await SignInManager.IsTwoFactorClientRememberedAsync(user);
        recoveryCodesLeft = await UserManager.CountRecoveryCodesAsync(user);
    }

    private async Task OnSubmitForgetBrowserAsync()
    {
        await SignInManager.ForgetTwoFactorClientAsync();

        RedirectManager.RedirectToCurrentPageWithStatus(
            "The current browser has been forgotten. When you login again from this browser you will be prompted for your 2fa code.",
            HttpContext);
    }
}
